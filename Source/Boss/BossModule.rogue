module Boss
  uses ParseKit<<Boss>>

class BossModule
  PROPERTIES
    vm           : BossVM
    filepath     : String
    name         : String

    is_prepared  = false

    global_vars  = LookupList<<BossVar>>()
    global_data  = Int64[]

  #{
    global_types = LookupList<<Int32>>()
    local_types  = LookupList<<Int32>>()
    globals      = LookupList<<BossValue>>()
    locals       = LookupList<<BossValue>>()  # subset of global_vars
    }#

    types = LookupList<<BossType>>()

    statements   = CmdStatements()

  METHODS
    method init( vm, name, filepath )

    method get_type( t:Token, name:String, attributes=0:Int32 )->BossType
      local type = types[ name ]
      if (type)
        if (attributes) type.attributes |= attributes
        return type
      endIf

      type = BossType( vm, t, name, attributes )
      types[ name ] = type
      return type

      #{
    method launch
      if (is_launched) return

      is_launched = true
      if (statements.count)
        statements.execute( vm )
      endIf
      }#

    method prepare
      if (is_prepared) return
      is_prepared = true

      local scope = BossScope( this )
      statements.resolve( scope )
      statements.execute( vm )

endClass
