module Boss
  uses ParseKit<<Boss>>

class BossType
  PROPERTIES
    vm          : BossVM
    t           : Token
    name        : String
    index       : Int32
    attributes  : Int32

    _singleton  : BossObject

    methods     = LookupList<<BossMethod>>()
    properties  = LookupList<<BossProperty>>()

    is_resolved : Logical

  METHODS
    method init( vm, t, name, index, attributes=0 )

    method get_method( name:String )->BossMethod
      return get_method( t, name )

    method get_method( t:Token, name:String )->BossMethod
      local result = methods[ name ]
      if (result) return result
      result = BossMethod( this, t, name )
      methods[ name ] = result
      return result

    method locate_method( method_id:Int32 )->Int32
      # Returns -1 if not found
      forEach (m at index in methods)
        if (m.id == method_id) return index
      endForEach
      return -1

    method locate_property( property_id:Int32 )->Int32
      # Returns -1 if not found
      forEach (p at index in properties)
        if (p.id == property_id) return index
      endForEach
      return -1

    method resolve
      if (is_resolved) return
      is_resolved = true

      (forEach in methods).resolve
endClass
